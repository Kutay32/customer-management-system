{
	"info": {
		"_postman_id": "f8a9c2e3-5d6b-4a7c-9f8e-1d2c3b4a5e6f",
		"name": "Customer Management API",
		"description": "A collection for testing and using the Customer Management System API efficiently.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get All Customers",
			"request": {
				"method": "GET",
				"url": "{{base_url}}/api/customers",
				"description": "Retrieves a list of all customers in the database."
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response is an array\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(Array.isArray(jsonData)).to.be.true;",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "Get Customer by ID",
			"request": {
				"method": "GET",
				"url": "{{base_url}}/api/customers/{{customer_id}}",
				"description": "Retrieves a specific customer by their ID."
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Customer has expected properties\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('id');",
							"    pm.expect(jsonData).to.have.property('name');",
							"    pm.expect(jsonData).to.have.property('email');",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "Create Customer",
			"request": {
				"method": "POST",
				"url": "{{base_url}}/api/customers",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{$randomFullName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"phone\": \"{{$randomPhoneNumber}}\",\n    \"address\": \"{{$randomStreetAddress}}, {{$randomCity}}, {{$randomCountry}}\"\n}"
				},
				"description": "Creates a new customer record. Uses Postman dynamic variables for random data generation."
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Customer created successfully\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('id');",
							"    pm.expect(jsonData).to.have.property('name');",
							"    pm.expect(jsonData).to.have.property('email');",
							"    ",
							"    // Store the new customer ID for later use",
							"    if (jsonData.id) {",
							"        pm.environment.set(\"customer_id\", jsonData.id);",
							"    }",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "Update Customer",
			"request": {
				"method": "PUT",
				"url": "{{base_url}}/api/customers/{{customer_id}}",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Updated Name\",\n    \"phone\": \"555-123-4567\",\n    \"address\": \"456 Updated St, New City, Country\"\n}"
				},
				"description": "Updates an existing customer record. Note that you can update just the fields you want to change."
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Customer updated successfully\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(\"Updated Name\");",
							"    pm.expect(jsonData.phone).to.eql(\"555-123-4567\");",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "Delete Customer",
			"request": {
				"method": "DELETE",
				"url": "{{base_url}}/api/customers/{{customer_id}}",
				"description": "Deletes a customer record by ID."
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "Bulk Create Customers",
			"request": {
				"method": "POST",
				"url": "{{base_url}}/api/customers",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{$randomFullName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"phone\": \"{{$randomPhoneNumber}}\",\n    \"address\": \"{{$randomStreetAddress}}, {{$randomCity}}, {{$randomCountry}}\"\n}"
				},
				"description": "Creates multiple customer records in sequence using the Collection Runner."
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global pre-request script that runs before every request",
					"// You can add authentication logic or other setup here"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test script that runs after every request",
					"// You can add common assertions or cleanup logic here"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:5000",
			"type": "string"
		},
		{
			"key": "customer_id",
			"value": "1",
			"type": "string"
		}
	]
}